<?xml version="1.0" encoding="UTF-8" ?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a 
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domaicrn Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-2.1.xsd">

    <service verb="get" noun="Website">
        <description>get the website information</description>
        <in-parameters>
            <parameter name="classificationId" default="AppAdmin"/><!-- admin, hotel etc -->
        </in-parameters>
        <out-parameters>
            <parameter name="website" type="Map" default-value="AppAdmin">
                <parameter name="id"/><!-- productStoreId -->
                <parameter name="hostName"/>
                <parameter name="title"/>
                <parameter name="websiteContent" type="List">
                    <parameter name="content" type="Map">
                        <parameter name="path"/>
                        <parameter name="title"/>
                    </parameter>
                </parameter>
                <parameter name="websiteCategories" type="List">
                    <parameter name="websiteCategory" type="Map">
                        <parameter name="categoryId"/>
                        <parameter name="categoryName"/>
                        <parameter name="products" type="List"/>
                        <parameter name="product" type="Map">
                            <parameter name="productId"/>
                            <parameter name="productName"/>
                        </parameter>
                    </parameter>
                </parameter>
                <parameter name="productCategories" type="List">
                    <parameter name="productCategory" type="Map">
                        <parameter name="categoryId"/>
                        <parameter name="categoryName"/>
                    </parameter>
                </parameter>
            </parameter>
        </out-parameters>
        <actions>
            <service-call out-map="context" in-map="[wantOwner: true]"
                name="growerp.100.GeneralServices100.get#RelatedCompanyAndOwner"/>
            <entity-find entity-name="mantle.product.store.ProductStore" list="stores">
                <econdition field-name="organizationPartyId" from="ownerPartyId"/>
                <econdition field-name="storeDomain" from="classificationId"/>
            </entity-find>
            <entity-find entity-name="growerp.website.ProductStoreAndWebsiteContent" list="pages">
                <econdition field-name="organizationPartyId" from="ownerPartyId"/>
                <econdition field-name="pagePath" operator="is-not-null"/>
                <order-by field-name="sequenceNum"/>
            </entity-find>
            <entity-find entity-name="mantle.product.store.ProductStoreSetting" list="hostNames">
                <econdition field-name="productStoreId" from="stores[0].productStoreId"/>
                <econdition field-name="settingTypeEnumId" value="PsstHostname"/>
            </entity-find>
            <if condition="hostNames">
                <set field="hostName" from="hostNames[0].settingValue"/>
                <else>
                    <set field="hostName" value="????"/>
                </else>
            </if>
            <if condition="hostName == '10.0.2.2'">
                <set field="hostName" value="${stores[0].productStoreId}.localhost:8080"/></if>
            <set field="hostName" value="${hostName}/store"/>
            <set field="website" from="[
                    id: stores[0].productStoreId,
                    hostName: hostName,
                    ]"/>
            <set field="website.title" from="stores[0].storeName"/>
            <!-- content -->
            <set field="websiteContent" from="[]"/>
            <iterate list="pages" entry="page">
                <set field="location" value="${page.rootPageLocation}/content/${page.pagePath}.md.ftl"/>
                <set field="contentRef" from="ec.resource.getLocationReference(location)"/>
                <if condition="contentRef != null">
                    <set field="contentText" from="contentRef.getText()"/>
                </if>
                <if condition="!contentText"><set field="contentText" value=""/></if>
                <script>
                    String title = '';
                    contentText.eachLine {
                        if (it.startsWith('# ') || it.startsWith('## ')) {
                            title = it.substring(it.indexOf(' ') + 1);
                            return;
                        }
                    }
                </script>
                <script>websiteContent.add([path: page.pagePath, title: title,
                        text: contentText, seqId: page.sequenceNum])</script>
            </iterate>
            <set field="website.websiteContent" from="websiteContent"/>
            <!-- categories and products -->
            <entity-find entity-name="growerp.website.ProductStoreAndWebsiteCategories" list="items">
                <econdition field-name="organizationPartyId" from="companyPartyId"/>
                <econdition field-name="classificationId" from="classificationId"/>
                <econditions combine="or"><!-- just show deals and new products -->
                    <econdition field-name="storeCategoryTypeEnumId" value="PsctPromotions"/>
                    <econdition field-name="storeCategoryTypeEnumId" value="PsctFeatured"/>
                </econditions>
            </entity-find>
            <set field="lastItem" from="null"/>
            <set field="products" from="[]"/>
            <set field="categories" from="[]"/>
            <iterate list="items" entry="item">
                <if condition="lastItem &amp;&amp; lastItem.productCategoryId != item.productCategoryId">
                    <set field="categoryOut.products" from="products"/>
                    <script>categories.add(categoryOut)</script>
                    <set field="products" from="[]"/>
                </if>
                <if condition="!lastItem || lastItem.productCategoryId != item.productCategoryId">
                    <set field="categoryOut" from="[
                                categoryId: item.productCategoryId,
                                categoryName: item.categoryName]"/>
                </if>
                <if condition="item.productId">
                    <script>products.add([productId: item.productId,
                            productName: item.productName])</script>
                </if>
                <set field="lastItem" from="item"/>
            </iterate>
            <!-- website categories -->
            <set field="website.websiteCategories" from="categories"/>
            <if condition="lastItem">
                <set field="categoryOut.products" from="products"/>
                <script>categories.add(categoryOut)</script>
            </if>
            <!-- productCategories -->
            <entity-find entity-name="mantle.product.store.ProductStoreCategory"
                    list="browseRootCategories">
                <econdition field-name="productStoreId" from="stores[0].productStoreId"/>
                <econdition field-name="storeCategoryTypeEnumId" value="PsctBrowseRoot"/>
            </entity-find>
            <entity-find entity-name="growerp.mobile.party.category.ProductCategoryParentsAndChild"
                    list="storeCategories">
                <econdition field-name="parentProductCategoryId"
                        from="browseRootCategories[0].productCategoryId"/>
                <order-by field-name="sequenceNum"/>
            </entity-find>
            <set field="categories" from="[]"/>
            <iterate list="storeCategories" entry="category">
                <set field="categoryOut" from="[categoryId: category.productCategoryId,
                                                categoryName: category.categoryName,
                                                seqId: category.sequenceNum]"/>
                <script>categories.add(categoryOut)</script>
            </iterate>
            <set field="website.productCategories" from="categories"/>
        </actions>
    </service>

    <service verb="update" noun="Website">
        <description>update the website information</description>
        <in-parameters>
            <parameter name="website" type="Map" required="true">
                <parameter name="id" required="true"/>
                <parameter name="title"/>
                <parameter name="websiteContent" type="List">
                    <parameter name="content" type="Map">
                        <parameter name="path"/>
                        <parameter name="title"/><!-- if path found and title empty, page will be deleted -->
                        <parameter name="text"/>
                        <parameter name="seqId"/>
                    </parameter>
                </parameter>
                <parameter name="websiteCategories" type="List">
                    <parameter name="websiteCategory" type="Map">
                        <parameter name="categoryId"/>
                        <parameter name="categoryName"/>
                        <parameter name="products" type="List"/>
                        <parameter name="product" type="Map">
                            <parameter name="productId"/>
                            <parameter name="productName"/>
                        </parameter>
                    </parameter>
                </parameter>
                <parameter name="productCategories" type="List">
                    <parameter name="productCategory" type="Map">
                        <parameter name="categoryId"/>
                    </parameter>
                </parameter>
            </parameter>
        </in-parameters>
        <out-parameters>
            <parameter name="website" type="Map">
                <parameter name="id"/>
                <parameter name="hostName"/>
                <parameter name="title"/>
                <parameter name="websiteContent" type="List">
                    <parameter name="content" type="Map">
                        <parameter name="path"/>
                        <parameter name="title"/>
                        <parameter name="text"/>
                        <parameter name="seqId"/>
                    </parameter>
                </parameter>
                <parameter name="websiteCategories" type="List">
                    <parameter name="websiteCategory" type="Map">
                        <parameter name="categoryId"/>
                        <parameter name="categoryName"/>
                        <parameter name="products" type="List"/>
                        <parameter name="product" type="Map">
                            <parameter name="productId"/>
                            <parameter name="productName"/>
                        </parameter>
                    </parameter>
                </parameter>
                <parameter name="productCategories" type="List">
                    <parameter name="productCategory" type="Map">
                        <parameter name="categoryId"/>
                        <parameter name="categoryName"/>
                    </parameter>
                </parameter>
           </parameter>
        </out-parameters>
        <actions>
            <service-call out-map="context" 
                name="growerp.100.GeneralServices100.get#RelatedCompanyAndOwner"/>
            <entity-find entity-name="mantle.product.store.ProductStore"
                    list="stores" limit="1" for-update="true">
                <econdition field-name="organizationPartyId" from="companyPartyId"/>
                <econdition field-name="productStoreId" from="website.id"/>
            </entity-find>
            <if condition="!stores"><then>
                <log  message="Could not find company: $companyPartyId store: ${website.id}"/>
                <set field="website" from="[:]"/></then>
            <else>
                <!-- update title -->
                <if condition="website.title &amp;&amp; website.title != stores[0].storeName">
                    <set field="stores[0].storeName" from="website.title"/>
                    <entity-update value-field="stores[0]"/></if>

                <if condition="website.websiteContent">
                <!-- update content.text or delete -->
                <iterate list="website.websiteContent" entry="content">
                    <entity-find entity-name="growerp.website.ProductStoreAndWebsiteContent" list="pages">
                        <econdition field-name="productStoreId" from="website.id"/>
                        <econdition field-name="pagePath" from="content.path"/>
                    </entity-find>
                    <!-- change sequence -->
                    <if condition="pages">
                        <if condition="content.seqId != pages[0].sequenceNum">
                            <service-call name="update#moqui.resource.wiki.WikiPage"
                                in-map="wikiPageId: pages[0].wikiPageId, sequenceNum: content.seqId"/></if>
                        <!-- update content.text or delete -->
                        <if condition="content.text == ''"><continue/></if>
                        <log message="====process text for ${content.path}"/>
                        <set field="root" from="pages[0].rootPageLocation"/>
                        <set field="pagePath" from="pages[0].pagePath"/>
                      <else>
                        <if condition="content.path != ''">
                            <return error="true" message="Could not find page with path: ${content.path}"/>
                        </if> 
                        <!-- wikipage with version and higest seq num-->
                        <entity-find entity-name="moqui.resource.wiki.WikiPage" list="wikiPages">
                            <econdition field-name="wikiSpaceId" from="stores[0].wikiSpaceId"/>
                            <econdition field-name="pagePath" operator="is-not-null"/>
                        </entity-find>
                        <set field="seq" value="0" type="Integer"/>
                        <iterate list="wikiPages" entry="wikiPage">
                            <if condition="wikiPage.sequenceNum &gt; seq">
                                <set field="seq" from="wikiPage.sequenceNum"/></if></iterate>
                                <service-call name="create#moqui.resource.wiki.WikiPage"
                                    out-map="context"
                                    in-map="[wikiSpaceId: stores[0].wikiSpaceId,
                                            pagePath:  '==temp==',
                                            sequenceNum: seq + 1,
                                            publishedVersionName: '01']"/>
                                <service-call name="update#moqui.resource.wiki.WikiPage"
                                    in-map="[wikiPageId: wikiPageId,
                                            pagePath:  wikiPageId]"/>
                        <!-- get top resource location -->
                        <entity-find entity-name="mantle.product.store.ProductStoreSetting" list="topResource">
                            <econdition field-name="productStoreId" from="stores[0].productStoreId"/>
                            <econdition field-name="settingTypeEnumId" value="PsstContentLocation"/>
                        </entity-find>
                        <!-- get content resource location -->
                        <entity-find entity-name="moqui.resource.DbResource" list="topResourceContent">
                            <econdition field-name="parentResourceId" from="topResource[0].settingValue.substring(13)"/>
                            <econdition field-name="filename" value="content"/>
                        </entity-find>
                        <!-- create db resource -->
                        <service-call name="create#moqui.resource.DbResource" out-map="context"
                            in-map="[parentResourceId: topResourceContent[0].resourceId,
                                    isFile: 'Y', filename: wikiPageId + '.md.ftl']"/>
                        <!-- file -->
                        <service-call name="create#moqui.resource.DbResourceFile"
                            in-map="[resourceId: resourceId,
                                        mimeType: 'text/markdown',
                                        versionName: '01',
                                        rootVersionName: '01',
                                        fileData: content.text]"/>
                        <!-- history -->
                        <set field="nowDate" from="ec.user.nowTimestamp"/>
                        <service-call name="create#moqui.resource.DbResourceFileHistory"
                            in-map="[resourceId: resourceId,
                                    versionName: '01', isDiff: 'N',
                                    versionDate: nowDate]"/>
                        <continue/>
                        </else>
                    </if>
                    <if condition="content.title == '' &amp;&amp; content.path"><!-- found but no title should be deleted -->
                        <!-- delete -->
                        <service-call name="org.moqui.impl.WikiServices.delete#WikiPage"
                            in-map="[wikiSpaceId: stores[0].wikiSpaceId,
                                        pagePath: content.path]"/>
                      <else><!-- update -->
                        <set field="location" value="${root}/content/${pagePath}.md.ftl"/>
                        <set field="docRr" from="ec.resource.getLocationReference(location)"/>
                        <if condition="content.text != docRr.getText()">
                            <script>docRr.putText(content.text)</script></if>
                      </else>
                    </if>
                </iterate>
                </if>
                <!-- website categories -->
                <if condition="website.websiteCategories">
                    <iterate list="website.websiteCategories" entry="catg">
                        <service-call name="growerp.100.CatgProdServices100.update#ProductCategory"
                            in-map="[category: catg]"/>
                    </iterate>
                </if>
                <!-- product categories -->
                <if condition="website.productCategories">
                    <entity-find entity-name="mantle.product.store.ProductStoreCategory" list="browseRootCategories">
                        <econdition field-name="productStoreId" from="website.id"/>
                        <econdition field-name="storeCategoryTypeEnumId" value="PsctBrowseRoot"/>
                    </entity-find>
                    <!-- delete all -->
                    <entity-delete-by-condition entity-name="mantle.product.category.ProductCategoryRollup">
                        <econdition field-name="parentProductCategoryId" from="browseRootCategories[0].productCategoryId"/>
                    </entity-delete-by-condition>
                    <!-- add all -->
                    <if condition="website.productCategories[0].categoryId == 'allDelete'">
                        <set field="website.productCategories" from="[]"/>
                    </if>
                    <set field="sequenceNum" value="1" type="Integer"/>
                    <iterate list="website.productCategories" entry="catg">
                        <service-call name="create#mantle.product.category.ProductCategoryRollup"
                            in-map="[parentProductCategoryId: browseRootCategories[0].productCategoryId,
                                    productCategoryId: catg.categoryId, sequenceNum: sequenceNum++]"/>
                    </iterate>
                </if>
                <!-- get changed website -->
                <service-call name="growerp.100.WebsiteServices100.get#Website"
                    in-map="[classificationId: stores[0].storeDomain]"
                    out-map="context"/>
            </else></if>
        </actions>
    </service>

 </services>