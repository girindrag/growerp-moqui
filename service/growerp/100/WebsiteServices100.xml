<?xml version="1.0" encoding="UTF-8" ?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a 
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domaicrn Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-2.1.xsd">

    <service verb="get" noun="Website">
        <description>get the website information</description>
        <in-parameters>
            <parameter name="classificationId" default="AppAdmin"/><!-- admin, hotel etc -->
        </in-parameters>
        <out-parameters>
            <parameter name="website" type="Map" default-value="AppAdmin">
                <parameter name="id"/><!-- productStoreId -->
                <parameter name="hostName"/>
                <parameter name="websiteContent" type="List">
                    <parameter name="content" type="Map">
                        <parameter name="id"/>
                        <parameter name="text"/>
                    </parameter>
                </parameter>
                <parameter name="websiteCategories" type="List">
                    <parameter name="websiteCategory" type="Map">
                        <parameter name="categoryId"/>
                        <parameter name="categoryName"/>
                        <parameter name="products" type="List"/>
                        <parameter name="product" type="Map">
                            <parameter name="productId"/>
                            <parameter name="productName"/>
                        </parameter>
                    </parameter>
                </parameter>
                <parameter name="productCategories" type="List">
                    <parameter name="productCategory" type="Map">
                        <parameter name="categoryId"/>
                        <parameter name="categoryName"/>
                    </parameter>
                </parameter>
            </parameter>
        </out-parameters>
        <actions>
            <service-call out-map="context" 
                name="growerp.100.GeneralServices100.get#RelatedCompanyAndOwner"/>
            <entity-find entity-name="growerp.website.ProductStoreAndWebsiteContent" list="pages">
                <econdition field-name="organizationPartyId" from="companyPartyId"/>
                <econdition field-name="classificationId" from="classificationId"/>
                <econdition field-name="pagePath" operator="is-not-null"/>
            </entity-find>
            <if condition="!pages">
                <set field="website" from="[:]"/>
                <return error="true" message="No product store found for company $companyPartyId appl: $classificationId"/>
            </if>
            <set field="hostName" from="ec.web.getHostName(false)"/>
            <if condition="hostName == '10.0.2.2'">
                <set field="hostName" value="localhost:8080"/></if>
            <set field="hostName" value="${pages[0].productStoreId}.${hostName}/store"/>
            <set field="website" from="[
                    id: pages[0].productStoreId,
                    hostName: hostName,
                    ]"/>
            <set field="websiteContent" from="[]"/>
            <script>websiteContent.add([id: 'title', text: pages[0].storeName])</script>
            <iterate list="pages" entry="page">
                <set field="location" value="${page.rootPageLocation}/content/${page.pagePath}.md.ftl"/>
                <set field="contentRef" from="ec.resource.getLocationReference(location)"/>
                <if condition="contentRef != null">
                    <set field="contentText" from="contentRef.getText()"/>
                </if>
                <if condition="!contentText"><set field="contentText" value=""/></if>
                <script>websiteContent.add([id: page.pagePath, text: contentText])</script>
            </iterate>
            <set field="website.websiteContent" from="websiteContent"/>
            <!-- categories and products -->
            <entity-find entity-name="growerp.website.ProductStoreAndWebsiteCategories" list="items">
                <econdition field-name="organizationPartyId" from="companyPartyId"/>
                <econdition field-name="classificationId" from="classificationId"/>
                <econditions combine="or"><!-- just show deals and new products -->
                    <econdition field-name="storeCategoryTypeEnumId" value="PsctPromotions"/>
                    <econdition field-name="storeCategoryTypeEnumId" value="PsctNewProducts"/>
                </econditions>
            </entity-find>
            <set field="lastItem" from="null"/>
            <set field="products" from="[]"/>
            <set field="categories" from="[]"/>
            <iterate list="items" entry="item">
                <if condition="lastItem &amp;&amp; lastItem.productCategoryId != item.productCategoryId">
                    <set field="categoryOut.products" from="products"/>
                    <script>categories.add(categoryOut)</script>
                    <set field="products" from="[]"/>
                </if>
                <if condition="!lastItem || lastItem.productCategoryId != item.productCategoryId">
                    <set field="categoryOut" from="[
                                categoryId: item.productCategoryId,
                                categoryName: item.categoryName]"/>
                </if>
                <if condition="item.productId">
                    <script>products.add([productId: item.productId,
                            productName: item.productName])</script>
                </if>
                <set field="lastItem" from="item"/>
            </iterate>
            <!-- website categories -->
            <set field="website.websiteCategories" from="categories"/>
            <if condition="lastItem">
                <set field="categoryOut.products" from="products"/>
                <script>categories.add(categoryOut)</script>
            </if>
            <!-- productCategories -->
            <entity-find entity-name="mantle.product.store.ProductStoreCategory" list="browseRootCategories">
                <econdition field-name="productStoreId" from="pages[0].productStoreId"/>
                <econdition field-name="storeCategoryTypeEnumId" value="PsctBrowseRoot"/>
            </entity-find>
            <entity-find entity-name="growerp.mobile.party.category.ProductCategoryParentsAndChild"
                    list="storeCategories">
                <econdition field-name="parentProductCategoryId"
                        from="browseRootCategories[0].productCategoryId"/>
            </entity-find>
            <set field="categories" from="[]"/>
            <iterate list="storeCategories" entry="category">
                <set field="categoryOut" from="[categoryId: category.productCategoryId,
                                                categoryName: category.categoryName]"/>
                <script>categories.add(categoryOut)</script>
            </iterate>
            <set field="website.productCategories" from="categories"/>
        </actions>
    </service>

    <service verb="update" noun="Website">
        <description>update the website information</description>
        <in-parameters>
            <parameter name="website" type="Map" required="true">
                <parameter name="id" required="true"/>
                <parameter name="websiteContent" type="List">
                    <parameter name="content" type="Map">
                        <parameter name="id"/>
                        <parameter name="text"/>
                    </parameter>
                </parameter>
                <parameter name="websiteCategories" type="List">
                    <parameter name="websiteCategory" type="Map">
                        <parameter name="categoryId"/>
                        <parameter name="categoryName"/>
                        <parameter name="products" type="List"/>
                        <parameter name="product" type="Map">
                            <parameter name="productId"/>
                            <parameter name="productName"/>
                        </parameter>
                    </parameter>
                </parameter>
                <parameter name="productCategories" type="List">
                    <parameter name="productCategory" type="Map">
                        <parameter name="categoryId"/>
                    </parameter>
                </parameter>
            </parameter>
        </in-parameters>
        <out-parameters>
            <parameter name="website" type="Map">
                <parameter name="id"/>
                <parameter name="hostName"/>
                <parameter name="websiteContent" type="List">
                    <parameter name="content" type="Map">
                        <parameter name="id"/>
                        <parameter name="text"/>
                    </parameter>
                </parameter>
                <parameter name="websiteCategories" type="List">
                    <parameter name="websiteCategory" type="Map">
                        <parameter name="categoryId"/>
                        <parameter name="categoryName"/>
                        <parameter name="products" type="List"/>
                        <parameter name="product" type="Map">
                            <parameter name="productId"/>
                            <parameter name="productName"/>
                        </parameter>
                    </parameter>
                </parameter>
                <parameter name="productCategories" type="List">
                    <parameter name="productCategory" type="Map">
                        <parameter name="categoryId"/>
                        <parameter name="categoryName"/>
                    </parameter>
                </parameter>
           </parameter>
        </out-parameters>
        <actions>
            <service-call out-map="context" 
                name="growerp.100.GeneralServices100.get#RelatedCompanyAndOwner"/>
            <entity-find entity-name="mantle.product.store.ProductStore"
                    list="stores" limit="1" for-update="true">
                <econdition field-name="organizationPartyId" from="companyPartyId"/>
                <econdition field-name="productStoreId" from="website.id"/>
            </entity-find>
            <if condition="stores"><then>
                <if condition="website.websiteContent">
                    <!-- find title -->
                    <set field="title" from="null"/>
                    <script>website.websiteContent.each { if (it.id == 'title') title = it.text}</script>
                    <if condition="title != null &amp;&amp; title != stores[0].storeName">
                        <set field="stores[0].storeName" from="title"/>
                        <entity-update value-field="stores[0]"/>
                    </if>
                    <iterate list="website.websiteContent" entry="content">
                        <if condition="content.id == 'title'"><continue/></if>
                        <entity-find entity-name="growerp.website.ProductStoreAndWebsiteContent" list="pages">
                            <econdition field-name="productStoreId" from="website.id"/>
                            <econdition field-name="pagePath" from="content.id"/>
                        </entity-find>
                        <if condition="!pages"><return error="true" 
                            message="Page ${content.id} not found for productStore/websiteId: ${website.id}"/></if>
                        <set field="location" value="${pages[0].rootPageLocation}/content/${pages[0].pagePath}.md.ftl"/>
                        <set field="docRr" from="ec.resource.getLocationReference(location)"/>
                        <if condition="content.text != docRr.getText()">
                            <script>docRr.putText(content.text)</script>
                        </if>
                    </iterate>
                </if>
                <!-- website categories -->
                <if condition="website.websiteCategories">
                    <iterate list="website.websiteCategories" entry="catg">
                        <service-call name="growerp.100.CatgProdServices100.update#ProductCategory"
                            in-map="[category: catg]"/>
                    </iterate>
                </if>
                <!-- product categories -->
                <if condition="website.productCategories">
                    <entity-find entity-name="mantle.product.store.ProductStoreCategory" list="browseRootCategories">
                        <econdition field-name="productStoreId" from="website.id"/>
                        <econdition field-name="storeCategoryTypeEnumId" value="PsctBrowseRoot"/>
                    </entity-find>
                    <!-- delete all -->
                    <entity-delete-by-condition entity-name="mantle.product.category.ProductCategoryRollup">
                        <econdition field-name="parentProductCategoryId" from="browseRootCategories[0].productCategoryId"/>
                    </entity-delete-by-condition>
                    <!-- add all -->
                    <iterate list="website.productCategories" entry="catg">
                        <service-call name="create#mantle.product.category.ProductCategoryRollup"
                            in-map="[parentProductCategoryId: browseRootCategories[0].productCategoryId,
                                    productCategoryId: catg.categoryId]"/>
                    </iterate>
                </if>
                <!-- get changed website -->
                <service-call name="growerp.100.WebsiteServices100.get#Website"
                    in-map="[classificationId: stores[0].storeDomain]"
                    out-map="context"/></then>
            <else>
                <log  message="Could not find company: $companyPartyId store: ${website.id}"/>
                <set field="website" from="[:]"/></else></if>
        </actions>
    </service>

 </services>