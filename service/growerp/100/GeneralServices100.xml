<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any 
warranty.

You should have received a copy of the CC0 Public Domaicrn Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-2.1.xsd">

    <service verb="get" noun="RelatedCompanyAndOwner">
        <description>Retrieves owner and company of a logged in or other person user</description>
        <in-parameters>
            <parameter name="userPartyId"/><!-- of this particular user -->
        </in-parameters>
        <out-parameters>
            <parameter name="ownerPartyId"/>
            <parameter name="companyPartyId"/>
        </out-parameters>
        <actions>
            <if condition="!userPartyId">
                <if condition="ec.user &amp;&amp; ec.user?.userAccount?.partyId">
                    <set field="userPartyId" from="ec.user.userAccount.partyId" />
                    <else>
                        <return message="No user Provided and not logged in"/>
                    </else>
                </if>
            </if>
            <entity-find entity-name="growerp.mobile.CompanyPersonAndLoginGroup" list="relList">
                <date-filter />
                <econdition field-name="userPartyId"/>
                <select-field field-name="companyPartyId,ownerPartyId"/></entity-find>
            <if condition="relList">
                <set field="companyPartyId" from="relList[0].companyPartyId" />
                <set field="ownerPartyId" from="relList[0].ownerPartyId" />
                <else>
                    <return message="User $userPartyId not found!"/>
                </else>
        </if>
        </actions>
    </service>

    <service verb="get" noun="RelatedCompanyPartyId"><!-- depreciated -->
        <in-parameters>
            <parameter name="userPartyId"/><!-- of this particular user -->
        </in-parameters>
        <out-parameters>
            <parameter name="ownerPartyId"/>
            <parameter name="partyId" />
        </out-parameters>
        <actions>
            <log level="warn" message="get#RelatedCompanyPartyId depreciated! Use: get#RelatedCompanyAndOwner"/>
            <if condition="!userPartyId">
                <if condition="ec.user &amp;&amp; ec.user?.userAccount?.partyId">
                    <set field="userPartyId" from="ec.user.userAccount.partyId" />
                    <else>
                        <return/><!-- just return null if no related comany found -->
                    </else>
                </if>
            </if>
            <entity-find entity-name="mantle.party.PartyRelationship" list="relList">
                <date-filter />
                <econdition field-name="fromPartyId" from="userPartyId" />
                <econdition field-name="toRoleTypeId" value="OrgInternal" />
                <select-field field-name="toPartyId" />
            </entity-find>
            <if condition="relList">
                <set field="ownerPartyId" from="relList[0].toPartyId" />
                <set field="partyId" from="ownerPartyId" />
                <else>
                    <return message="User ${userPartyId} has no related company!!"/>
                </else>
            </if>
        </actions>
    </service>

    <service verb="get" noun="Stats">
        <out-parameters><parameter name="stats"/></out-parameters>
        <actions>
            <set field="stats" from="[:]"/>
            <service-call 
                name="growerp.100.GeneralServices100.get#RelatedCompanyPartyId"
                out-map="context"/>
            <entity-find-count count-field="admins"
                entity-name="growerp.mobile.CompanyPersonAndLoginGroup">
                <econdition field-name="ownerPartyId"/>
                <econdition field-name="userDisabled" value="N"/>
                <econdition field-name="companyDisabled" value="N"/>
                <econdition field-name="userGroupId" value="GROWERP_M_ADMIN"/>
            </entity-find-count>
            <entity-find-count count-field="employees"
                entity-name="growerp.mobile.CompanyPersonAndLoginGroup">
                <econdition field-name="ownerPartyId"/>
                <econdition field-name="userDisabled" value="N"/>
                <econdition field-name="companyDisabled" value="N"/>
                <econdition field-name="userGroupId" operator="in"
                    from="['GROWERP_M_EMPLOYEE','GROWERP_M_ADMIN']"/>
            </entity-find-count>
            <entity-find-count count-field="leads"
                entity-name="growerp.mobile.CompanyPersonAndLoginGroup">
                <econdition field-name="ownerPartyId"/>
                <econdition field-name="userDisabled" value="N"/>
                <econdition field-name="companyDisabled" value="N"/>
                <econdition field-name="userGroupId"
                    value="GROWERP_M_LEAD"/>
            </entity-find-count>
            <entity-find-count count-field="customers"
                entity-name="growerp.mobile.CompanyPersonAndLoginGroup">
                <econdition field-name="ownerPartyId"/>
                <econdition field-name="userDisabled" value="N"/>
                <econdition field-name="companyDisabled" value="N"/>
                <econdition field-name="userGroupId"
                    value="GROWERP_M_CUSTOMER"/>
            </entity-find-count>
            <entity-find-count count-field="suppliers"
                entity-name="growerp.mobile.CompanyPersonAndLoginGroup">
                <econdition field-name="ownerPartyId"/>
                <econdition field-name="userDisabled" value="N"/>
                <econdition field-name="companyDisabled" value="N"/>
                <econdition field-name="userGroupId"
                    value="GROWERP_M_SUPPLIER"/>
            </entity-find-count>

            <entity-find-count entity-name="mantle.product.Product"
                count-field="products">
                <econditions combine="or">
                    <econdition field-name="salesDiscontinuationDate"
                        operator="is-null"/>
                    <econdition field-name="salesDiscontinuationDate"
                        operator="greater" from="ec.user.nowTimestamp"/>
                </econditions>
                <econdition field-name="ownerPartyId"/>
            </entity-find-count>
            <entity-find-count count-field="categories"
                entity-name="growerp.mobile.party.category.ProductCategoryParentsAndChild">
                <econdition field-name="ownerPartyId"/>
                <date-filter/>
            </entity-find-count>
            <entity-find-count count-field="opportunities"
                entity-name="mantle.sales.opportunity.SalesOpportunity">
                <econdition field-name="opportunityStageId"
                    operator="not-equals" value="Deleted"/>
                <econdition field-name="ownerPartyId"/>
            </entity-find-count>
            <entity-find-count count-field="myOpportunities"
                entity-name="mantle.sales.opportunity.SalesOpportunity">
                <econdition field-name="ownerPartyId"/>
                <econdition field-name="opportunityStageId"
                    operator="not-equals" value="Deleted"/>
                <econdition field-name="accountPartyId"
                    from="ec.user.userAccount.partyId"/>
            </entity-find-count>

            <entity-find-count entity-name="mantle.order.OrderPart"
                count-field="openSlsOrders">
                <econdition field-name="vendorPartyId" from="ownerPartyId"/>
            </entity-find-count>
            <entity-find-count entity-name="mantle.order.OrderPart"
                count-field="openPurOrders">
                <econdition field-name="customerPartyId" from="ownerPartyId"/>
            </entity-find-count>
            <entity-find entity-name="mantle.account.invoice.InvoiceSummary" list="allRecInvList" use-clone="true">
                <econdition field-name="fromPartyId" from="ownerPartyId"/>
                <econdition field-name="statusId" operator="in" value="InvoiceFinalized,InvoiceSent,InvoiceAcked"/>
                <select-field field-name="fromPartyId,invoiceCount,unpaidTotal,currencyUomId"/>
            </entity-find>
            <entity-find entity-name="mantle.account.invoice.InvoiceSummary" list="allPblInvList" use-clone="true">
                <econdition field-name="toPartyId" from="ownerPartyId"/>
                <econdition field-name="statusId" operator="in" value="InvoiceReceived,InvoiceApproved"/>
                <select-field field-name="toPartyId,invoiceCount,unpaidTotal,currencyUomId"/>
            </entity-find>  
            <set field="stats" from="[
                admins: admins.toString(),
                employees: employees.toString(),
                suppliers: suppliers.toString(),
                leads: leads.toString(),
                customers: customers.toString(),
                openSlsOrders: openSlsOrders.toString(),
                openPurOrders: openPurOrders.toString(),
                opportunities: opportunities.toString(),
                myOpportunities: myOpportunities.toString(),
                categories: categories.toString(),
                products: products.toString(),
                salesInvoicesNotPaidCount: allRecInvList ? allRecInvList[0].invoiceCount.toString() : '0',
                salesInvoicesNotPaidAmount: allRecInvList ? allRecInvList[0].unpaidTotal.toString() : '0.00',
                purchInvoicesNotPaidCount: allPblInvList ? allPblInvList[0].invoiceCount.toString(): '0',
                purchInvoicesNotPaidAmount: allPblInvList ? allPblInvList[0].unpaidTotal.toString() : '0.00',
            ]"/>
        </actions>
    </service>

    <service verb="check" noun="ApiKey">
        <out-parameters><parameter name="ok"/></out-parameters>
        <actions><set field="ok" value="ok"/></actions>
    </service>

    <service verb="get" noun="CurrencyList" authenticate="anonymous-all">
        <description>
            Get currency list for registration.
        </description>
        <out-parameters>
            <parameter name="currencyList" type="List"/>
        </out-parameters>
        <actions>
            <entity-find entity-name="moqui.basic.Uom" list="allCurrencyList">
                <econdition field-name="uomTypeEnumId" value="UT_CURRENCY_MEASURE"/><order-by field-name="description"/>
            </entity-find>
            <set field="currencyList" from="[]"/>
            <iterate entry="currency" list="allCurrencyList">
                <script>currencyList.add("${currency.description} [${currency.abbreviation}]")</script>
            </iterate>
        </actions>
    </service>

    <service verb="login" noun="User" authenticate="anonymous-all">
        <description>service to return an apikey if user/password ok, when not check for a reset password</description>
        <in-parameters>
            <parameter name="username" required="true"/>
            <parameter name="password" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="apiKey"/>
            <parameter name="moquiSessionToken"/>
            <parameter name="user" type="Map"/>
            <parameter name="company" type="Map"/>
            <parameter name="passwordChange" default="false"/>
            <parameter name="stats"/>
            <parameter name="itemTypes"/>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="moqui.security.UserAccount" 
                    value-field="userAccount" cache="false">
                <field-map field-name="username"/></entity-find-one>
            <set field="oldPassword" from="password"/>
            <if condition="!userAccount"><return error="true" 
                    message="cannot find username: ${username}" public="true"/></if>
            <script>
                def token = new org.apache.shiro.authc.UsernamePasswordToken(
                    (String) userAccount.username, (String) oldPassword)
                def info = new org.apache.shiro.authc.SimpleAuthenticationInfo(
                    userAccount.username, userAccount.currentPassword,
                    userAccount.passwordSalt ? new org.apache.shiro.util.SimpleByteSource(
                        (String) userAccount.passwordSalt) : null, "moquiRealm")
            </script>
            <if condition="!userAccount.currentPassword || 
                    !ec.ecfi.getCredentialsMatcher(userAccount.passwordHashType, 
                    'Y'.equals(userAccount.passwordBase64)).doCredentialsMatch(token, info)">
                <if condition="userAccount.resetPassword">
                    <!-- try the resetPassword -->
                    <script>
                        info = new org.apache.shiro.authc.SimpleAuthenticationInfo(
                            userAccount.username, userAccount.resetPassword,
                            userAccount.passwordSalt 
                                ? new org.apache.shiro.util.SimpleByteSource(
                                        (String) userAccount.passwordSalt) 
                                : null, "moquiRealm")
                    </script>
                    <if condition="ec.ecfi.getCredentialsMatcher(userAccount.passwordHashType,
                         'Y'.equals(userAccount.passwordBase64)).doCredentialsMatch(token, info)">
                        <set field="passwordChange" value="true"/>
                    </if>
                </if>
            </if>
            <if condition="!passwordChange">
                <script>ec.user.loginUser(username, password)</script>
                <service-call name="growerp.100.PartyServices100.get#User"
                    in-map="[userPartyId: userAccount.partyId]" out-map="context"/>
                <service-call name="growerp.100.PartyServices100.get#Company" out-map="context"/>
                <set field="apiKey" from="ec.user.getLoginKey()"/>
                <set field="moquiSessionToken" from="ec.web.sessionToken"/>
                <service-call name="growerp.100.GeneralServices100.get#Stats" out-map="context"/>
                <service-call name="growerp.100.GeneralServices100.get#ItemTypes" out-map="context"/>
            </if>
        </actions>
    </service>

    <service verb="reset" noun="Password" authenticate="anonymous-all">
        <in-parameters>
            <parameter name="username"/>
        </in-parameters>
        <out-parameters>
            <parameter name="response"/>
        </out-parameters>
        <actions>
            <service-call name="org.moqui.impl.UserServices.reset#Password"
                in-map="[username: username]" out-map="response"/>
        </actions>
    </service>

     <service verb="update" noun="Password"><description>Change the password of an account and re-enable also used with reset password logged off</description>
        <in-parameters>
            <parameter name="username" required="true"/>
            <parameter name="newPassword" required="true"/>
            <parameter name="oldPassword" default-value="dummy"/>
        </in-parameters>
        <actions>
            <if condition="ec.user.userAccount"><!-- only possible with a loggedin user -->
                <service-call name="growerp.100.GeneralServices100.get#RelatedCompanyPartyId"
                    out-map="context"/>
                <!-- make sure that username is only searched for in the logged in user own company -->
                <entity-find entity-name="growerp.mobile.CompanyPersonAndLogin" list="accounts">
                    <econdition field-name="username"/>
                    <econdition field-name="toPartyId" from="ownerPartyId"/></entity-find>
                <if condition="!accounts"><return error="true"
                    message="cannot find username: ${username}" public="true"/></if>
            </if>
            <service-call name="org.moqui.impl.UserServices.update#Password"
                 in-map="[username: username, oldPassword: oldPassword,
                    newPassword: newPassword, newPasswordVerify: newPassword]"/>
            <!-- enable useraccount -->
            <service-call name="update#moqui.security.UserAccount"
                    in-map="[username:username, disabled:'N', disabledDateTime:null,
                    successiveFailedLogins:0]"/>
        </actions>
    </service>

    <service verb="get" noun="ItemTypes">
        <description>itemtypes for orderItem and invoiceItem</description>
        <out-parameters>
            <parameter name="itemTypes" type="Map"/>
        </out-parameters>
        <actions>
            <set field="itemTypes" from="[:]"/>
            <set field="itemTypes['sales']" from="[]"/>
            <entity-find entity-name="moqui.basic.EnumAndGroup" list="salesItemTypes">
                <econdition field-name="enumGroupEnumId" value="EngItemsSales"/>
                <order-by field-name="description"/></entity-find>
            <iterate list="salesItemTypes" entry="itemType">
                <script>itemTypes['sales'].add([itemTypeId: itemType.enumId, description: itemType.description])</script>
            </iterate>
            <set field="itemTypes['purchase']" from="[]"/>
            <entity-find entity-name="moqui.basic.EnumAndGroup" list="purchaseItemTypes">
                <econdition field-name="enumGroupEnumId" operator="in" value="EngItemsPurchase,EngItemsProduct"/>
                <order-by field-name="description"/></entity-find>
            <iterate list="purchaseItemTypes" entry="itemType">
                <script>itemTypes['purchase'].add([itemTypeId: itemType.enumId, description: itemType.description])</script>
            </iterate>
        </actions>
    </service>

</services>
