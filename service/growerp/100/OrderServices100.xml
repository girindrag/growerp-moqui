<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a 
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domaicrn Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-2.1.xsd">

    <service verb="get" noun="Orders">
        <description>
            Get order information by order, item and party
        </description>
        <in-parameters>
            <parameter name="orderId"/>
            <parameter name="sales" type="Boolean"/>
            <parameter name="open" type="Boolean" default-value="true"/>
            <parameter name="startDate"><description>Format should be YYYY-MM-DD</description></parameter>
            <parameter name="start" default-value="0" type="Integer"/>
            <parameter name="limit" default-value="10" type="Integer"/>
            <parameter name="search"/>
        </in-parameters>
        <out-parameters>
            <parameter name="orders" type="List"/>
            <parameter name="order" type="Map"/>
        </out-parameters>
        <actions>
            <service-call
                name="growerp.100.GeneralServices100.get#RelatedCompanyPartyId"
                 out-map="context"/>
            <service-call name="growerp.100.GeneralServices100.get#RelatedCompanyPartyId" out-map="context" />
            <if condition="orderId">
                <entity-find
                        entity-name="growerp.order.OrderHeaderPartItemAndParties" list="items">
                    <econdition field-name="orderId"/>
                    <econditions combine="or">
                        <econdition field-name="vendorPartyId" from="ownerPartyId"/>
                        <econdition field-name="customerPartyId" from="ownerPartyId"/>
                    </econditions>
                    <order-by field-name="orderItemSeqId"/>
                </entity-find>
            <else>
                <set field="statusList"
                    from="['OrderOpen','OrderPlaced','OrderApproved']"/>
                <if condition="open">
                    <set field="status" from="statusList"/>
                </if>
                <if condition="startDate">
                    <set field="tsDate"
                        from="ec.l10n.parseTimestamp(ec.l10n.format(startDate, 'yyyy-MM-dd')
                            + ' 23:59:59.999', 'yyyy-MM-dd HH:mm:ss.SSS')"/>
                </if>
                <if condition="sales">
                    <set field="vendorPartyId" from="ownerPartyId"/>
                <else>
                    <set field="customerPartyId" from="ownerPartyId"/></else></if>
                <if condition="search">
                    <set field="search" value="%${search}%"/></if>
                <entity-find offset="start" limit="limit"
                        entity-name="growerp.order.OrderHeaderPartItemAndParties" list="items">
                    <econdition field-name="orderId" ignore-if-empty="true"/>
                    <econdition field-name="vendorPartyId" from="vendorPartyId" ignore-if-empty="true"/>
                    <econdition field-name="customerPartyId" from="customerPartyId" ignore-if-empty="true"/>
                    <econdition field-name="statusId" operator="in" from="status" ignore-if-empty="true"/>
                    <econdition field-name="placedDate" operator="less-equals" from="tsDate" ignore-if-empty="true"/>
                    <econditions combine="or">
                        <econdition field-name="orderId"
                            operator="like" from="search" ignore-if-empty="true"/>
                    </econditions>
                    <order-by field-name="orderId"/>
                    <order-by field-name="orderItemSeqId"/>
                </entity-find></else></if>
            <set field="lastItem" from="null"/>
            <if condition="!orderId">
                <set field="orders" from="[]"/>
            </if>
            <set field="orderItems" from="[]"/>
            <iterate entry="item" list="items">
                <if condition="lastItem &amp;&amp; lastItem.orderId != item.orderId">
                    <if condition="lastItem.customerPartyId == ownerPartyId">
                       <set field="otherCompanyPartyId" from="lastItem.vendorPartyId"/>
                       <else>
                            <set field="otherCompanyPartyId" from="lastItem.customerPartyId"/>
                        </else>
                    </if>
                    <entity-find list="others" 
                            entity-name="growerp.mobile.CompanyPersonAndLoginGroup">
                        <econdition field-name="companyPartyId" from="otherCompanyPartyId"/>
                        <date-filter/><select-field field-name="userPartyId"/></entity-find>
                    <if condition="!others">
                        <return error="true" message="Could not find company $otherCompanyPartyId from order ${lastItem.orderId} in view CompanyPersonAndLoginGroup"/></if>
                    <service-call name="growerp.100.PartyServices100.get#User"
                        in-map="[userPartyId: others[0].userPartyId]" out-map="userOut"/>
                    <set field="orderOut" from="[
                        orderId: lastItem.orderId,
                        description: lastItem.orderName,
                        orderStatusId: lastItem.statusId,
                        placedDate: lastItem.placedDate.toString().substring(0,19) + 'Z',
                        sales: (lastItem.vendorPartyId == ownerPartyId).toString(),
                        otherUser: userOut.user,
                        grandTotal: lastItem.grandTotal.toString(),
                        invoiceId: lastItem.invoiceId,
                        paymentId: lastItem.paymentId,
                        orderItems: orderItems
                        ]"/>
                    <script>orders.add(orderOut)</script>
                    <set field="orderItems" from="[]"/>
                </if>
                <set field="orderItem" from="[
                    orderItemSeqId: item.orderItemSeqId,
                    productId: item.productId,
                    itemTypeId: item.itemTypeEnumId,
                    description: item.itemDescription,
                    quantity: item.quantity.toString(),
                    price: item.unitAmount.toString(),
                    ]"/>
                <script>orderItems.add(orderItem)</script>
                <set field="lastItem" from="item"/>
            </iterate>
            <if condition="lastItem">
                <if condition="lastItem.customerPartyId == ownerPartyId">
                    <set field="otherCompanyPartyId" from="lastItem.vendorPartyId"/>
                    <else>
                         <set field="otherCompanyPartyId" from="lastItem.customerPartyId"/>
                     </else>
                </if>
                <entity-find list="others" 
                    entity-name="growerp.mobile.CompanyPersonAndLoginGroup">
                        <econdition field-name="companyPartyId" from="otherCompanyPartyId"/>
                        <date-filter/><select-field field-name="userPartyId"/></entity-find>
                <if condition="!others">
                    <return error="true" message="Could not find company $otherCompanyPartyId from order ${lastItem.orderId} in view CompanyPersonAndLoginGroup"/></if>
                <service-call name="growerp.100.PartyServices100.get#User"
                        in-map="[userPartyId: others[0].userPartyId]" out-map="userOut"/>
                <set field="orderOut" from="[
                     orderId: lastItem.orderId,
                     description: lastItem.orderName,
                     orderStatusId: lastItem.statusId,
                     placedDate: lastItem.placedDate.toString().substring(0,19) + 'Z',
                     sales: (lastItem.vendorPartyId == ownerPartyId).toString(),
                     otherUser: userOut.user,
                     grandTotal: lastItem.grandTotal.toString(),
                     invoiceId: lastItem.invoiceId,
                     paymentId: lastItem.paymentId,
                     orderItems: orderItems
                     ]"/>
                <if condition="orderId">
                    <set field="order" from="orderOut"/>
                    <else>
                        <script>orders.add(orderOut)</script>
                    </else>
                </if>
            </if>
            <!--if condition="orderId">
                <log message="==== open order send: ${order}"/>
                <else>
                    <log message="==== open orders send: ${orders.size()}"/>
                </else>
            </if-->
        </actions></service>


    <service verb="create" noun="Order">
        <description> Create an order for the users company</description>
        <in-parameters>
            <parameter name="order" required="true" type="String"/></in-parameters>
        <out-parameters>
            <parameter name="order"/></out-parameters>
        <actions>
            <script>
                Object order = new groovy.json.JsonSlurper().parseText(order).order
            </script>
            <service-call out-map="context"
                name="growerp.100.GeneralServices100.get#RelatedCompanyAndOwner"/>
            <if condition="order.sales">
                <set field="vendorPartyId" from="ownerCompanyId"/>
                <set field="customerPartyId" from="order.otherUser.companyPartyId"/>
                <else>
                    <set field="customerPartyId" from="ownerCompanyId"/>
                    <set field="vendorPartyId" from="order.otherUser.companyPartyId"/>
                </else>
            </if>
            <entity-find entity-name="mantle.product.store.ProductStore" list="stores">
                <econdition field-name="organizationPartyId" from="ownerPartyId"/>
            </entity-find>
            <set field="productStoreId" from="stores[0].productStoreId"/>
            <entity-find-one entity-name="mantle.ledger.config.PartyAcctgPreference"
                    value-field="aPref">
                <field-map field-name="organizationPartyId" from="ownerPartyId"/>
            </entity-find-one>
            <set field="currencyId" from="aPref.baseCurrencyUomId"/>
            <set field="placedDate" from="ec.user.nowTimestamp"/>
            <service-call name="mantle.order.OrderServices.create#Order"
                in-map="context + [orderName: order.description]" out-map="context"/>
            <iterate entry="item" list="order.orderItems">
                <if condition="item.productId">
                    <service-call
                            name="mantle.order.OrderServices.add#OrderProductQuantity"
                        in-map="context + [productId: item.productId,
                                            quantity: item.quantity,
                                            unitAmount: item.price,
                                            currencyUomId: currencyId]"
                        out-map="itemcreate"/>
                    <else>
                        <service-call
                            name="mantle.order.OrderServices.create#OrderItem"
                        in-map="context + [itemDescription: item.description,
                                            quantity: item.quantity,
                                            unitAmount: item.price,
                                            currencyUomId: currencyId]"
                        out-map="itemcreate"/>
                    </else>
                </if>
            </iterate>
            <service-call name="growerp.100.OrderServices100.getOrders"
                in-map="[orderId: orderId]" out-map="context"/>
        </actions>
    </service>

    <service verb="update" noun="Order">
        <description> Update the order by re-creatingonly in the 'OrderOpen' status'.</description>
        <in-parameters>
            <parameter name="order" required="true" type="String"/></in-parameters>
        <out-parameters>
            <parameter name="order"/></out-parameters>
        <actions>
            <!-- status sequence:
                OrderOpen -> OrderPlaced -> orderApproved -> OrderCompleted
            -->
            <script>
                Object order = new groovy.json.JsonSlurper().parseText(order).order
            </script>
            <service-call out-map="context"
                name="growerp.100.GeneralServices100.get#RelatedCompanyAndOwner"/>
            <set field="orderId" from="order.orderId"/>
            <entity-find entity-name="OrderHeaderPartItemAndParties" list="items">
                <econdition field-name="orderId" from="order.orderId"/>
                <econditions combine="or">
                    <econdition field-name="vendorPartyId" from="ownerPartyId"/>
                    <econdition field-name="customerPartyId" from="ownerPartyId"/>
                </econditions>
                <order-by field-name="orderItemSeqId"/>
            </entity-find>
            <if condition="!items"><return error="true" message="Order not found"/></if>
            <set field="paymentId" from="items[0].paymentId"/>
            <set field="invoiceId" from="items[0].invoiceId"/>
            <set field="orderPartSeqId" value="01"/>
            <!-- orderheader -->
            <if condition="items[0].orderName != order.description">
                <entity-find-one entity-name="mantle.order.OrderHeader" value-field="orderHeader">
                    <field-map field-name="orderId" from="order.orderId"/>
                </entity-find-one>
                <set field="orderHeader.orderName" from="order.description"/>
                <entity-update value-field="orderHeader"/>
            </if>
            <!-- handle status changes -->
            <if condition="order.orderStatusId != items[0].statusId">
                <if condition="order.orderStatusId == 'OrderPlaced'">
                    <service-call in-map="context" out-map="context"
                        name="mantle.order.OrderServices.place#Order"/>
                    <if condition="order.sales">
                        <set field="invStatusId" value="InvoiceFinalized"/>
                        <else>
                            <set field="invStatusId" value="InvoiceReceived"/>
                        </else>
                    </if>
                    <service-call in-map="context + [statusId: invStatusId]" out-map="context"
                        name="mantle.account.InvoiceServices.create#EntireOrderPartInvoice"/>
                    <service-call name="mantle.order.OrderServices.add#OrderPartPayment"
                        in-map="context" out-map="context"/>
                    <entity-find-one entity-name="mantle.account.payment.Payment"
                        value-field="payment" for-update="true"/>
                    <set field="payment.statusId" value="PmntAuthorized"/>
                    <service-call name="update#mantle.account.payment.Payment" in-map="payment"/>
                </if>
                <if condition="order.orderStatusId == 'OrderApproved'">
                    <service-call name="mantle.order.OrderServices.approve#Order"
                        in-map="context"/>
                </if>
                <if condition="order.orderStatusId == 'OrderCompleted'">
                    <service-call name="mantle.order.OrderServices.complete#Order"
                        in-map="context"/>
                    <entity-find-one entity-name="mantle.account.invoice.Invoice"
                        value-field="invoice" for-update="true"/>
                    <if condition="order.sales">
                        <set field="invoice.statusId" value="InvoiceSent"/>
                        <else>
                            <set field="invoice.statusId" value="InvoiceReceived"/>
                        </else>
                    </if>
                    <service-call name="update#mantle.account.invoice.Invoice" in-map="invoice"/>
                    </if>
                <if condition="order.orderStatusId == 'OrderCancelled'">
                    <service-call name="mantle.order.OrderServices.cancel#Order"
                        in-map="context"/>
                </if>
            </if>
                <service-call name="growerp.100.OrderServices100.getOrders"
                in-map="[orderId: order.orderId]" out-map="context"/>
        </actions>
    </service>
</services>
