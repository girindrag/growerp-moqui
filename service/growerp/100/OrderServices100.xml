<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a 
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domaicrn Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-2.1.xsd">

    <service verb="convert" noun="StatusId">
        <in-parameters>
            <parameter name="docType" required="true"/>
            <parameter name="sales" type="Boolean"/>
            <parameter name="statusId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="convertedStatusId"/>
        </out-parameters>
        <actions>
            <if condition="docType == 'order'">
                <set field="orderStatusValues" from="[
                    OrderOpen: 'FinDocPrep',
                    FinDocPrep: 'OrderOpen',
                    OrderPlaced: 'FinDocCreated',
                    FinDocCreated:'OrderPlaced',
                    OrderApproved: 'FinDocApproved',
                    FinDocApproved: 'OrderApproved',
                    OrderCompleted: 'FinDocCompleted',
                    FinDocCompleted: 'OrderCompleted',
                    OrderCancelled: 'FinDocCancelled',
                    FinDocCancelled:'OrderCancelled'
                ]"/>
                <set field="convertedStatusId" from="orderStatusValues[statusId]"/>
            </if>
            <if condition="docType == 'invoice'">
                <if condition="sales == true">
                    <set field="invoiceStatusValues" from="[
                        InvoiceInProcess: 'FinDocPrep',
                        FinDocPrep: 'InvoiceInProcess',
                        InvoiceFinalized: 'FinDocCreated',
                        FinDocCreated:' InvoiceFinalized',
                        InvoiceSent: 'FinDocApproved',
                        FinDocApproved: 'InvoiceSent',
                        InvoicePmtRecvd: 'FinDocCompleted',
                        FinDocCompleted: 'InvoicePmtRecvd',
                        InvoiceCancelled: 'FinDocCancelled',
                        FinDocCancelled: 'InvoiceCancelled'
                        ]"/>
                    <else>
                        <set field="invoiceStatusValues" from="[
                            InvoiceIncoming: 'FinDocPrep',
                            FinDocPrep: 'InvoiceIncoming',
                            InvoiceReceived: 'FinDocCreated',
                            FinDocCreated: 'InvoiceReceived',
                            InvoiceApproved: 'FinDocApproved',
                            FinDocApproved: 'InvoiceApproved',
                            InvoicePmtSent: 'FinDocCompleted',
                            FinDocCompleted: 'InvoicePmtSent',
                            InvoiceCancelled: 'FinDocCancelled',
                            FinDocCancelled: 'InvoiceCancelled'
                            ]"/>
                    </else>
                </if>
                <set field="convertedStatusId" from="invoiceStatusValues[statusId]"/>
            </if>
            <if condition="docType == 'payment'">
                    <set field="paymentStatusValues" from="[
                        PmntProposed: 'FinDocPrep',
                        FinDocPrep: 'PmntProposed',
                        PmntPromised: 'FinDocCreated',
                        FinDocCreated: 'PmntPromised',
                        PmntAuthorized: 'FinDocApproved',
                        FinDocApproved: 'PmntAuthorized',
                        PmntDelivered: 'FinDocCompleted',
                        FinDocCompleted: 'PmntDelivered',
                        PmntCancelled: 'FinDocCancelled',
                        FinDocCancelled: 'PmntCancelled'
                    ]"/>
                <set field="convertedStatusId" from="paymentStatusValues[statusId]"/>
            </if>
            <if condition="docType == 'transaction'">
                <set field="transactionStatusValues" from="[
                        NotPosted: 'FinDocPrep',
                        FinDocPrep: 'NotPosted',
                        Posted: 'FinDocCompleted',
                        FinDocCompleted: 'Posted',
                    ]"/>
                <set field="convertedStatusId" from="transactionStatusValues[statusId]"/>
            </if>
        </actions>
    </service>

    <service verb="get" noun="FinDoc">
        <description>
            Get order information by order, item and party
        </description>
        <in-parameters>
            <parameter name="id"/><!-- depending on type can be invoice/payment/order -->
            <parameter name="sales" type="Boolean"/>
            <parameter name="docType"/>
            <parameter name="open" type="Boolean" default-value="true"/>
            <parameter name="startDate"><description>Format should be YYYY-MM-DD</description></parameter>
            <parameter name="start" default-value="0" type="Integer"/>
            <parameter name="limit" default-value="10" type="Integer"/>
            <parameter name="search"/>
        </in-parameters>
        <out-parameters>
            <parameter name="finDocs" type="List"/>
            <parameter name="finDoc" type="Map"/>
        </out-parameters>
        <actions>
             <service-call out-map="context"
                name="growerp.100.GeneralServices100.get#RelatedCompanyAndOwner"/>
            <if condition="startDate">
                <set field="tsDate"
                    from="ec.l10n.parseTimestamp(ec.l10n.format(startDate, 'yyyy-MM-dd')
                        + ' 23:59:59.999', 'yyyy-MM-dd HH:mm:ss.SSS')"/>
            </if>
            <if condition="search">
                <set field="search" value="%${search}%"/></if>

            <set field="finDocs" from="[]"/>
            <set field="finDocItems" from="[]"/>
            <if condition="id">
                <set field="finDoc" from="[:]"/></if>

            <if condition="sales == true">
                <set field="vendorPartyId" from="ownerPartyId"/>
            <else>
                <set field="customerPartyId" from="ownerPartyId"/></else></if>

            <if condition="docType == 'order'">
                <if condition="id"><!-- single document -->
                    <entity-find list="items"
                            entity-name="growerp.order.OrderHeaderPartItemAndParties">
                        <econdition field-name="orderId" from="id"/>
                        <econditions combine="or">
                            <econdition field-name="vendorPartyId" from="ownerPartyId"/>
                            <econdition field-name="customerPartyId" from="ownerPartyId"/>
                        </econditions>
                        <order-by field-name="orderItemSeqId"/>
                    </entity-find>
                    <else><!-- multiple documents -->
                        <set field="statusList"
                            from="['OrderOpen','OrderPlaced','OrderApproved']"/> <!-- OrderCompleted OrderCancelled' -->
                        <if condition="open == true">
                            <set field="status" from="statusList"/>
                        </if>
                        <entity-find offset="start" limit="limit"
                                entity-name="growerp.order.OrderHeaderPartItemAndParties" list="items">
                            <econdition field-name="vendorPartyId" from="vendorPartyId" ignore-if-empty="true"/>
                            <econdition field-name="customerPartyId" from="customerPartyId" ignore-if-empty="true"/>
                            <econdition field-name="statusId" operator="in" from="status" ignore-if-empty="true"/>
                            <econdition field-name="placedDate" operator="less-equals" from="tsDate" ignore-if-empty="true"/>
                            <econditions combine="or">
                                <econdition field-name="orderId"
                                    operator="like" from="search" ignore-if-empty="true"/>
                            </econditions>
                            <order-by field-name="orderId"/>
                            <order-by field-name="orderItemSeqId"/>
                        </entity-find>
                    </else>
                </if>
                <set field="lastItem" from="null"/>
                <iterate entry="item" list="items">
                    <if condition="lastItem &amp;&amp; lastItem.orderId != item.orderId">
                        <set field="finDocOut.items" from="finDocItems"/> 
                        <script>finDocs.add(finDocOut)</script>
                    </if>   
                    <if condition="!lastItem || lastItem.orderId != item.orderId">
                        <if condition="item.customerPartyId == ownerPartyId">
                            <set field="sales" value="false" type="Boolean"/>
                            <set field="otherCompanyPartyId" from="item.vendorPartyId"/>
                            <else>
                                <set field="sales" value="true" type="Boolean"/>
                                <set field="otherCompanyPartyId" from="item.customerPartyId"/>
                            </else>
                        </if>
                        <entity-find list="others" 
                                entity-name="growerp.mobile.CompanyPersonAndLoginGroup">
                            <econdition field-name="companyPartyId" from="otherCompanyPartyId"/>
                            <date-filter/><select-field field-name="userPartyId"/></entity-find>
                        <if condition="!others">
                            <return error="true" message="Could not find company $otherCompanyPartyId from order ${lastItem.orderId} in view CompanyPersonAndLoginGroup"/></if>
                        <service-call name="growerp.100.PartyServices100.get#User"
                            in-map="[userPartyId: others[0].userPartyId]" out-map="userOut"/>
                        <service-call name="growerp.100.OrderServices100.convert#StatusId"
                            in-map="[sales: sales, docType: docType, statusId: item.statusId]" out-map="context"/>
                        <set field="finDocOut" from="[
                            orderId: item.orderId,
                            invoiceId: item.invoiceId,
                            paymentId: item.paymentId,
                            description: item.orderName,
                            statusId: convertedStatusId,
                            creationDate: item.placedDate.toString().substring(0,19) + 'Z',
                            sales: sales.toString(),
                            docType: docType,
                            sales: sales.toString(),
                            otherUser: userOut.user,
                            grandTotal: item.grandTotal.toString(),
                            ]"/>
                        <set field="finDocItems" from="[]"/>
                    </if>
                    <set field="finDocItem" from="[
                        itemSeqId: item.orderItemSeqId,
                        productId: item.productId,
                        itemTypeId: item.itemTypeEnumId,
                        description: item.itemDescription,
                        quantity: item.quantity.toString(),
                        price: item.unitAmount.toString(),
                        ]"/>
                    <script>finDocItems.add(finDocItem)</script>
                    <set field="lastItem" from="item"/>
                </iterate>
                <if condition="lastItem">
                    <set field="finDocOut.items" from="finDocItems"/>
                    <if condition="id">
                        <set field="finDoc" from="finDocOut"/>
                        <else>
                            <script>finDocs.add(finDocOut)</script>
                        </else>
                    </if> 
                </if>
            </if>
            <if condition="docType == 'invoice'">
                <if condition="id">
                    <entity-find
                            entity-name="growerp.order.InvoiceAndItem" list="items">
                        <econdition field-name="invoiceId" from="id"/>
                        <econditions combine="or">
                            <econdition field-name="fromPartyId" from="ownerPartyId"/>
                            <econdition field-name="toPartyId" from="ownerPartyId"/>
                        </econditions>
                        <order-by field-name="invoiceItemSeqId"/>
                    </entity-find>
                    <else><!-- invoice list -->
                        <if condition="open == true">
                            <set field="statusList" from="openStatusList"/></if>
                        <entity-find
                            entity-name="growerp.order.InvoiceAndItem" list="items">
                            <econdition field-name="toPartyId" from="customerPartyId" ignore-if-empty="true"/>
                            <econdition field-name="fromPartyId" from="vendorPartyId" ignore-if-empty="true"/>
                            <econdition field-name="statusId" operator="in" from="statusList" ignore-if-empty="true"/>
                            <econdition field-name="invoiceDate" operator="less-equals" from="tsDate" ignore-if-empty="true"/>
                            <econditions combine="or">
                                <econdition field-name="invoiceId"
                                    operator="like" from="search" ignore-if-empty="true"/>
                            </econditions>
                            <order-by field-name="invoiceId"/>
                            <order-by field-name="invoiceItemSeqId"/>
                        </entity-find>                            
                    </else>
                </if>
                <set field="lastItem" from="null"/>
                <iterate entry="item" list="items">
                    <if condition="lastItem &amp;&amp; lastItem.invoiceId != item.invoiceId">
                        <set field="finDocOut.items" from="finDocItems"/> 
                        <script>finDocs.add(finDocOut)</script>
                    </if>   
                    <if condition="!lastItem || lastItem.invoiceId != item.invoiceId">
                        <if condition="item.fromPartyId == ownerPartyId">
                            <set field="sales" value="true" type="Boolean"/>
                            <else>
                                <set field="sales" value="false" type="Boolean"/>
                            </else>
                        </if>
                        <entity-find list="others" 
                                entity-name="growerp.mobile.CompanyPersonAndLoginGroup">
                            <econdition field-name="companyPartyId" from="sales ? item.toPartyId : item.fromPartyId"/>
                            <date-filter/><select-field field-name="userPartyId"/></entity-find>
                        <if condition="!others">
                            <return error="true" message="Could not find company ${sales ? item.fromPartyId : item.toPartyId} from invoice ${item.invoiceId} in view CompanyPersonAndLoginGroup"/></if>
                        <service-call name="growerp.100.PartyServices100.get#User"
                            in-map="[userPartyId: others[0].userPartyId]" out-map="userOut"/>
                        <service-call name="growerp.100.OrderServices100.convert#StatusId"
                            in-map="[sales: sales, docType: docType, statusId: item.statusId]" out-map="context"/>
                        <set field="finDocOut" from="[
                            docType: docType,
                            sales: sales.toString(),
                            orderId: item.orderId,
                            invoiceId: item.invoiceId,
                            paymentId: item.paymentId,
                            description: item.description,
                            statusId: convertedStatusId,
                            creationDate: item.invoiceDate.toString().substring(0,19) + 'Z',
                            otherUser: userOut.user,
                            grandTotal: item.invoiceTotal.toString(),
                            ]"/>
                        <set field="finDocItems" from="[]"/>
                    </if>                       
                    <set field="finDocItem" from="[
                        itemSeqId: item.invoiceItemSeqId,
                        productId: item.productId,
                        itemTypeId: item.itemTypeEnumId,
                        description: item.itemDescription,
                        quantity: item.quantity.toString(),
                        price: item.amount.toString(),
                        ]"/>
                    <script>finDocItems.add(finDocItem)</script>
                    <set field="lastItem" from="item"/>
                </iterate>
                <if condition="lastItem">
                    <set field="finDocOut.items" from="finDocItems"/>
                    <if condition="id">
                        <set field="finDoc" from="finDocOut"/>
                        <else>
                            <script>finDocs.add(finDocOut)</script>
                        </else>
                    </if> 
                </if>
                <if condition="id">
                    <set field="finDoc" from="finDocOut"/>
                </if>
            </if>
            <if condition="docType == 'payment'">
                <set field="openStatusList"
                    from="['PmntProposed','PmntPromised','PmntAuthorized']"/>
                <if condition="id">
                    <entity-find
                            entity-name="growerp.order.PaymentAndInfo" list="items">
                        <econdition field-name="paymentId" from="id"/>
                        <econditions combine="or">
                            <econdition field-name="fromPartyId" from="ownerPartyId"/>
                            <econdition field-name="toPartyId" from="ownerPartyId"/>
                        </econditions>
                    </entity-find>
                    <else>
                        <if condition="open == true">
                            <set field="status" from="openStatusList"/></if>
                        <entity-find
                            entity-name="growerp.order.PaymentAndInfo" list="items">
                            <econdition field-name="toPartyId" from="vendorPartyId" ignore-if-empty="true"/>
                            <econdition field-name="fromPartyId" from="customerPartyId" ignore-if-empty="true"/>
                            <econdition field-name="statusId" operator="in" from="status" ignore-if-empty="true"/>
                            <econdition field-name="paymentDate" operator="less-equals" from="tsDate" ignore-if-empty="true"/>
                            <econditions combine="or">
                                <econdition field-name="paymentId"
                                    operator="like" from="search" ignore-if-empty="true"/>
                            </econditions>
                            <order-by field-name="paymentId"/>
                        </entity-find>
                    </else>
                </if>
                <iterate entry="item" list="items">
                    <if condition="item.toPartyId == ownerPartyId">
                        <set field="sales" value="true" type="Boolean"/>
                        <else>
                            <set field="sales" value="false" type="Boolean"/>
                        </else>
                    </if>
                    <entity-find list="others" 
                        entity-name="growerp.mobile.CompanyPersonAndLoginGroup">
                        <econdition field-name="companyPartyId" from="sales ? item.fromPartyId : item.toPartyId"/>
                        <date-filter/><select-field field-name="userPartyId"/></entity-find>
                    <if condition="!others">
                        <return error="true" message="Could not find company ${sales ? item.fromPartyId : item.toPartyId} from payment ${item.paymentId} in view CompanyPersonAndLoginGroup"/></if>
                    <service-call name="growerp.100.PartyServices100.get#User"
                        in-map="[userPartyId: others[0].userPartyId]" out-map="userOut"/>
                    <service-call name="growerp.100.OrderServices100.convert#StatusId"
                        in-map="[sales: sales, docType: docType, statusId: item.statusId]" out-map="context"/>
                    <set field="finDocOut" from="[
                        orderId: item.orderId,
                        invoiceId: item.invoiceId,
                        paymentId: item.paymentId,
                        statusId: convertedStatusId,
                        creationDate: item.effectiveDate ? item.effectiveDate.toString().substring(0,19) + 'Z' : null,
                        sales: sales.toString(),
                        docType: docType,
                        otherUser: userOut.user,
                        grandTotal: item.amount.toString(),
                        ]"/>
                    <if condition="id">
                        <set field="finDoc" from="finDocOut"/>
                        <else>
                            <script>finDocs.add(finDocOut)</script>
                        </else>
                    </if>
                </iterate>
            </if>
            <if condition="docType == 'transaction'">
                <set field="paymentStatusValues" from="[
                    PmntProposed: 'NotPosted',
                    PmntDelivered: 'Posted',
                    ]"/>
                <set field="openStatusList"
                    from="['NotPosted']"/>
                <if condition="id">
                    <entity-find  offset="start" limit="limit" list="entries"
                        entity-name="mantle.ledger.transaction.AcctgTransAndEntry">
                        <econdition field-name="organizationPartyId" from="ownerPartyId"/>
                        <econdition field-name="isPosted" value="Y"/>
                        <econdition field-name="acctgTransId" from="id"/>
                    </entity-find>
                    <else>
                        <if condition="open == true">
                            <set field="status" from="openStatusList"/></if>
                        <entity-find  offset="start" limit="limit" list="items"
                                entity-name="mantle.ledger.transaction.AcctgTransAndEntry">
                            <econdition field-name="organizationPartyId" from="ownerPartyId"/>
                            <econdition field-name="isPosted" value="Y"/>
                            <econditions combine="or">
                                <econdition field-name="txDescription"
                                    operator="like" from="search" ignore-if-empty="true"/>
                                <econdition field-name="acctgTransId"
                                    operator="like" from="search" ignore-if-empty="true"/>
                                <econdition field-name="otherPartyId"
                                    operator="like" from="search" ignore-if-empty="true"/>
                            </econditions>
                            <order-by field-name="-transactionDate"/>
                            <order-by field-name="itemSeqId"/>
                        </entity-find>
                    </else>
                </if>
                <set field="lastItem" from="null"/>
                <iterate entry="item" list="items">
                    <if condition="lastItem &amp;&amp; lastItem.acctgTransId != item.acctgTransId">
                        <script>
                            finDocOut.grandTotal = grandTotal.toString();
                            finDocs.add(finDocOut)
                        </script>
                    </if>   
                    <if condition="!lastItem || lastItem.acctgTransId != item.acctgTransId">
                        <entity-find list="others" 
                                entity-name="growerp.mobile.CompanyPersonAndLoginGroup">
                            <econdition field-name="companyPartyId" from="item.otherPartyId"/>
                            <date-filter/><select-field field-name="userPartyId"/></entity-find>
                        <service-call name="growerp.100.PartyServices100.get#User"
                            in-map="[userPartyId: others[0].userPartyId]" out-map="userOut"/>
                        <set field="finDocOut" from="[
                            docType: docType,
                            paymentId: item.paymentId,
                            invoiceId: item.invoiceId,
                            transactionId: item.acctgTransId,
                            statusId: item.isPosted == 'Y'? 'Posted' : 'NotPosted',
                            description: item.txDescription,
                            creationDate: item.transactionDate.toString().substring(0,19) + 'Z',
                            otherUser: userOut.user,
                            grandTotal: '',
                            items: [],
                        ]"/>
                        <set field="grandTotal" from="BigDecimal.ZERO" type="BigDecimal"/>
                    </if>
                    <set field="finDocItem" from="[
                            itemSeqId: item.acctgTransEntrySeqId,
                            amount: item.debitCreditFlag == 'D'? item.amount : (item.amount * -1),
                            glAccountId: item.glAccountId,
                            productId: item.productId,
                            description: item.description,
                        ]"/>
                    <set field="grandTotal" from="grandTotal.add(item.amount)"/>
                    <script>finDocOut.items.add(finDocItem)</script>
                    <set field="lastItem" from="item"/>
                </iterate>
                <if condition="lastItem">
                    <set field="finDocOut.grandTotal" from="grandTotal.toString()"/>
                    <if condition="id">
                        <set field="finDoc" from="finDocOut"/>
                        <else>
                            <script>
                                finDocs.add(finDocOut)
                            </script>
                        </else>
                    </if> 
                </if>
            </if>
        </actions>
    </service>

    <service verb="create" noun="FinDoc">
        <description>Create a financial document either order, invoice or payment</description>
        <in-parameters>
            <parameter name="finDoc" type="String"/>
        </in-parameters>
        <out-parameters>
            <parameter name="finDoc"></parameter>
        </out-parameters>
        <actions>
            <script>Object finDocIn = new groovy.json.JsonSlurper().parseText(finDoc).finDoc</script>
            <service-call out-map="context"
                name="growerp.100.GeneralServices100.get#RelatedCompanyAndOwner"/>
            <if condition="finDocIn.docType == 'order'">
                <service-call name="growerp.100.OrderServices100.create#Order"
                    in-map="[order: finDocIn]" out-map="context"/>
                <set field="inMap" from="[id: orderId, docType: 'order']"/>
                <else>
                    <return error="true" message="Document ${finDoc.docType} not supported yet...."/>
                </else>
            </if>
            <service-call name="growerp.100.OrderServices100.get#FinDoc"
                in-map="inMap" out-map="context"/>
        </actions>
    </service>

    <service verb="create" noun="Order">
        <description> Create an order for the users company</description>
        <in-parameters>
            <parameter name="order" required="true" type="Map"/></in-parameters>
        <out-parameters>
            <parameter name="orderId"/></out-parameters>
        <actions>
            <service-call out-map="context"
                name="growerp.100.GeneralServices100.get#RelatedCompanyAndOwner"/>
            <if condition="order.sales == 'true'">
                <set field="vendorPartyId" from="ownerCompanyId"/>
                <set field="customerPartyId" from="order.otherUser.companyPartyId"/>
                <else>
                    <set field="customerPartyId" from="ownerCompanyId"/>
                    <set field="vendorPartyId" from="order.otherUser.companyPartyId"/>
                </else>
            </if>
            <entity-find entity-name="mantle.product.store.ProductStore" list="stores">
                <econdition field-name="organizationPartyId" from="ownerPartyId"/>
            </entity-find>
            <set field="productStoreId" from="stores[0].productStoreId"/>
            <entity-find-one entity-name="mantle.ledger.config.PartyAcctgPreference"
                    value-field="aPref">
                <field-map field-name="organizationPartyId" from="ownerPartyId"/>
            </entity-find-one>
            <set field="currencyId" from="aPref.baseCurrencyUomId"/>
            <set field="placedDate" from="ec.user.nowTimestamp"/>
            <service-call name="mantle.order.OrderServices.create#Order"
                in-map="context + [orderName: order.description]" out-map="context"/>
            <iterate entry="item" list="order.items">
                <if condition="item.productId">
                    <service-call
                            name="mantle.order.OrderServices.add#OrderProductQuantity"
                        in-map="context + [productId: item.productId,
                                            quantity: item.quantity,
                                            unitAmount: item.price,
                                            currencyUomId: currencyId]"
                        out-map="itemcreate"/>
                    <else>
                        <service-call
                            name="mantle.order.OrderServices.create#OrderItem"
                        in-map="context + [itemDescription: item.description,
                                            quantity: item.quantity,
                                            unitAmount: item.price,
                                            currencyUomId: currencyId]"
                        out-map="itemcreate"/>
                    </else>
                </if>
            </iterate>
        </actions>
    </service>

    <service verb="pay" noun="Order">
        <description> Update the order by re-creatingonly in the 'OrderOpen' status'.</description>
        <in-parameters>
            <parameter name="order" required="true" type="String"/></in-parameters>
        <out-parameters>
            <parameter name="order"/></out-parameters>
        <actions>
            <script>
                Object order = new groovy.json.JsonSlurper().parseText(order).order
            </script>
            <service-call in-map="[invoiceId: order.invoiceId, order.paymentId]"
                name="mantle.account.PaymentServices.send#PromisedPayment">
            </service-call>
        </actions>
    </service>

    <service verb="update" noun="FinDoc">
        <description>Update a financial document either order, invoice or payment</description>
        <in-parameters>
            <parameter name="finDoc"/>
        </in-parameters>
        <out-parameters>
            <parameter name="finDoc" type="Map"></parameter>
        </out-parameters>
        <actions>
            <script>Object finDocIn = new groovy.json.JsonSlurper().parseText(finDoc).finDoc</script>
            <service-call name="growerp.100.OrderServices100.convert#StatusId"  out-map="context"
                in-map="[sales: finDocIn?.sales, docType: finDocIn.docType, statusId: finDocIn.statusId]"/>
            <set field="finDocIn.statusId" from="convertedStatusId"/>
            <if condition="finDocIn.docType == 'order'">
                <service-call name="growerp.100.OrderServices100.update#Order"
                    in-map="[order: finDocIn]" out-map="context"/>
                <set field="inMap" from="[id: finDocIn.orderId, docType: 'order']"/>
            </if>
            <if condition="finDocIn.docType == 'invoice'">
                <service-call name="update#mantle.account.invoice.Invoice"
                    in-map="[invoiceId: finDocIn.invoiceId, statusId: finDocIn.statusId]" out-map="context"/>
                <set field="inMap" from="[id: finDocIn.invoiceId, docType: 'invoice']"/>
            </if>
            <if condition="finDocIn.docType == 'payment'">
                <service-call name="update#mantle.account.payment.Payment"
                    in-map="[paymentId: finDocIn.paymentId, statusId: finDocIn.statusId,
                            effectiveDate: ec.user.nowTimestamp]" out-map="context"/>
                <if condition="finDocIn.statusId == 'PmntDelivered'">
                    <service-call in-map="paymentId: finDocIn.paymentId, invoiceId: finDocIn.invoiceId"
                        name="mantle.account.PaymentServices.apply#InvoicePayment"/>
                </if>
                <set field="inMap" from="[id: finDocIn.paymentId, docType: 'payment']"/>
            </if>
            <service-call name="growerp.100.OrderServices100.get#FinDoc"
                in-map="inMap" out-map="context"/>
        </actions>
    </service>

    <service verb="update" noun="Order">
        <description> Update the order by re-creating only in the 'OrderOpen' status'.</description>
        <in-parameters>
            <parameter name="order" required="true" type="Map"/></in-parameters>
        <out-parameters>
            <parameter name="order" type="Map"/></out-parameters>
        <actions>
            <!-- status sequence:
                OrderOpen -> OrderPlaced -> orderApproved -> OrderCompleted
            -->
            <service-call out-map="context"
                name="growerp.100.GeneralServices100.get#RelatedCompanyAndOwner"/>
            <set field="orderId" from="order.orderId"/>
            <entity-find entity-name="OrderHeaderPartItemAndParties" list="items">
                <econdition field-name="orderId"/>
                <econditions combine="or">
                    <econdition field-name="vendorPartyId" from="ownerPartyId"/>
                    <econdition field-name="customerPartyId" from="ownerPartyId"/>
                </econditions>
                <order-by field-name="orderItemSeqId"/>
            </entity-find>
            <if condition="!items"><return error="true" message="Order not found"/></if>
            <set field="paymentId" from="items[0].paymentId"/>
            <set field="invoiceId" from="items[0].invoiceId"/>
            <set field="orderPartSeqId" value="01"/>
            <!-- orderheader -->
            <if condition="items[0].orderName != order.description">
                <entity-find-one entity-name="mantle.order.OrderHeader" value-field="orderHeader">
                    <field-map field-name="orderId" from="order.orderId"/>
                </entity-find-one>
                <set field="orderHeader.orderName" from="order.description"/>
                <entity-update value-field="orderHeader"/>
            </if>
            <!-- handle status changes -->
            <if condition="order.statusId != items[0].statusId">
                <if condition="order.statusId == 'OrderPlaced'">
                    <service-call in-map="context" out-map="context"
                        name="mantle.order.OrderServices.place#Order"/>
                    <if condition="order.sales == 'true'">
                        <set field="invStatusId" value="InvoiceFinalized"/>
                        <else>
                            <set field="invStatusId" value="InvoiceReceived"/>
                        </else>
                    </if>
                    <service-call in-map="context + [statusId: invStatusId]" out-map="context"
                        name="mantle.account.InvoiceServices.create#EntireOrderPartInvoice"/>
                    <service-call in-map="context" out-map="context"
                        name="mantle.order.OrderServices.add#OrderPartPayment"/>
                    <entity-find-one entity-name="mantle.account.payment.Payment"
                        value-field="payment" for-update="true"/>
                    <set field="payment.statusId" value="PmntAuthorized"/>
                    <service-call
                        name="update#mantle.account.payment.Payment" in-map="payment"/>
                </if>
                <if condition="order.statusId == 'OrderApproved'">
                    <service-call name="mantle.order.OrderServices.approve#Order"
                        in-map="context"/>
                </if>
                <if condition="order.statusId == 'OrderCompleted'">
                    <service-call name="mantle.order.OrderServices.complete#Order"
                        in-map="context"/>
                    <entity-find-one entity-name="mantle.account.invoice.Invoice"
                        value-field="invoice" for-update="true"/>
                    <if condition="sales == 'true'">
                        <set field="invoice.statusId" value="InvoiceSent"/>
                        <else>
                            <set field="invoice.statusId" value="InvoiceReceived"/>
                        </else>
                    </if>
                    <service-call name="update#mantle.account.invoice.Invoice" in-map="invoice"/>
                </if>
                <if condition="order.statusId == 'OrderCancelled'">
                    <service-call name="mantle.order.OrderServices.cancel#Order"
                        in-map="context"/>
                </if>
            </if>
        </actions>
    </service>
</services>
